# -*- coding: utf-8 -*-

# Define your item pipelines here
#
# Don't forget to add your pipeline to the ITEM_PIPELINES setting
# See: https://doc.scrapy.org/en/latest/topics/item-pipeline.html

#need to write objects to the file....I guess append as we get them?
from MandateMediaMigrator.items import *
import os
import json
import requests
paths = {
	Author : "authors",
	Category : "categories",
	Slideshow : "slideshows",
	NavElement : "nav_elements",
	Tag : "tags",
	Redirect : "redirects",
	BlogPost : "blog_posts",
	NewsPost : "news_posts",
	Page : "pages",
	File : "files"
}
class MandatemediamigratorPipeline(object):
	def process_item(self, item, spider):
		if type(item) is File:
			with open(f"./objects/{paths[type(item)]}/{item['url'].split('/')[-1]}",'wb') as f:
				fileUrl =  ""
				if "https" not in item["url"]:
					fileUrl =  "https://"+spider.base_url+item["url"] 
				else:
					fileUrl = item["url"]
				req = requests.get(fileUrl)
				if req.status_code != 200:
					with open("./objects/failed.log","a+") as ff:
						ff.write(json.dumps(dict(item)))
				else:
					f.write(req.content)
		else:
			for key in item.fields:
				item.setdefault(key,'')
			self.file.write(item.format())
			with open(f"./objects/{paths[type(item)]}/{item['itemid']}",'w') as f:
				f.write(json.dumps(dict(item), indent=4, sort_keys=True))
		return item
	
	def open_spider(self, spider):
		#init object directories
		if not os.path.isdir("./objects"):
			os.mkdir("./objects")
		for _,val in paths.items():
			if not os.path.isdir(f"./objects/{val}"):
				os.mkdir(f"./objects/{val}")

		self.file = open('output.xml','w')
		self.file.write(f"""<?xml version="1.0" encoding="UTF-8" ?>
<!-- This is a WordPress eXtended RSS file generated by WordPress as an export of your site. -->
<!-- It contains information about your site's posts, pages, comments, categories, and other content. -->
<!-- You may use this file to transfer that content from one site to another. -->
<!-- This file is not intended to serve as a complete backup of your site. -->

<!-- To import this information into a WordPress site follow these steps: -->
<!-- 1. Log in to that site as an administrator. -->
<!-- 2. Go to Tools: Import in the WordPress admin panel. -->
<!-- 3. Install the "WordPress" importer from the list. -->
<!-- 4. Activate & Run Importer. -->
<!-- 5. Upload this file using the form provided on that page. -->
<!-- 6. You will first be asked to map the authors in this export file to users -->
<!--    on the site. For each author, you may choose to map to an -->
<!--    existing user on the site or to create a new user. -->
<!-- 7. WordPress will then import each of the posts, pages, comments, categories, etc. -->
<!--    contained in this file into your site. -->

	<!-- generator="WordPress/5.1.1" created="2019-03-23 17:56" -->
<rss version="2.0"
	xmlns:excerpt="http://wordpress.org/export/1.2/excerpt/"
	xmlns:content="http://purl.org/rss/1.0/modules/content/"
	xmlns:wfw="http://wellformedweb.org/CommentAPI/"
	xmlns:dc="http://purl.org/dc/elements/1.1/"
	xmlns:wp="http://wordpress.org/export/1.2/"
>

<channel>
	<generator>https://wordpress.org/?v=5.1.1</generator>
	<title>TexProtects</title>
	<link>{spider.target_url}</link>
	<description>Just another WordPress site</description>
	<pubDate>Sat, 23 Mar 2019 17:56:32 +0000</pubDate>
	<language>en-US</language>
	<wp:wxr_version>1.2</wp:wxr_version>
	<wp:base_site_url>{spider.target_url}</wp:base_site_url>
	<wp:base_blog_url>{spider.target_url}</wp:base_blog_url>

	<wp:term>
	<wp:term_id><![CDATA[2]]></wp:term_id>
	<wp:term_taxonomy><![CDATA[nav_menu]]></wp:term_taxonomy>
	<wp:term_slug><![CDATA[default-menu]]></wp:term_slug>
	<wp:term_parent><![CDATA[]]></wp:term_parent>
	<wp:term_name><![CDATA[Default]]></wp:term_name>
</wp:term>
	""")
	
	def close_spider(self, spider):
		self.file.write("""</channel>
</rss>
	""")
		self.file.close()